{"version":3,"sources":["scripts.js"],"names":["window","ftfHelpers","ready","fn","document","readyState","addEventListener","fetchData","data","cb","done","fetch","ftf_aet","ajax_url","method","headers","body","URLSearchParams","response","json","then","error","console","dispatchEvent","eventName","event","Event","processAttachmentURL","getTweetId","url","match","replace","processTweets","tweets","querySelectorAll","_iterator","_createForOfIteratorHelper","_step","value","anchors","tweet","length","href","tweetIds","push","tweetId","err","e","f","config","use_api","action","tweet_ids","join","forEach","renderTweet","tweetsWithAttachment","_step2","_iterator2","s","n","dataset","urlAttachmentProcessed","urlAttachment","indexOf","log","urlAttachmentPreview","tmpAnchor","image","createElement","className","urlAttachmentPreviewHTML","concat","hostname","title","description","innerHTML","appendChild","_loop","_iterator3","_step3","tweetAttribution","tweetDate","childNodes","querySelector","textContent","i","currentNode","tweetsWithAttachmentCount","nodeName","nodeValue","tweetDateEl","usernames","name","username","names","split","created_at","tweetText","text","tweetUrl","id","verifiedBadge","users","verified","renderedTweetHTML","profile_image_url","entities","urls","display_url","RegExp","expanded_url","mentions","mention","container","hashtags","hashtag","tag","media","index","type","preview_image_url","variants","content_type","width","height","alt_text","polls","poll","voteCounts","votesTotal","options","map","option","votes","Math","max","apply","_toConsumableArray","reduce","total","num","votesPortion","voteCountMax","label","round","toLocaleString","Date","toLocaleDateString","navigator","language","month","year","day","show_metrics","public_metrics","retweet_count","like_count","renderedTweet","parentNode","extended_entities","lastUrl","tweetContainer","replaceChild"],"mappings":"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","file":"scripts.min.js","sourcesContent":["'use strict';\nwindow.ftfHelpers = window.ftfHelpers || {};\n\nwindow.ftfHelpers.ready = function( fn ) {\n    if ( document.readyState != 'loading' ){\n        fn();\n    } else {\n        document.addEventListener( 'DOMContentLoaded', fn );\n    }\n}\n\nwindow.ftfHelpers.fetchData = function( data, cb, done ){\n    done = done || function(){ /* noop */ }\n\n    fetch( window.ftf_aet.ajax_url, {\n        method: 'POST',\n        credentials: 'same-origin',\n        headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Cache-Control': 'no-cache',\n        },\n        body: new URLSearchParams( data ) } )\n        .then(function( response ){ return response.json() } )\n        .then( function( response ){\n            // console.log( 'response', response );\n            cb( response );\n\n        } )\n        .catch( function( error ){\n            console.error( 'tembeds_error', error );\n        } )\n        .then( done );\n}\n\nwindow.ftfHelpers.dispatchEvent = function( eventName ){\n    const event = new Event( eventName );\n    document.dispatchEvent( event );\n}\n\nwindow.ftfHelpers.processAttachmentURL = function( cb ){\n\n}\n\nwindow.ftfHelpers.getTweetId = function( url ){\n    return url.match(/status\\/(\\d+)/g)[0].replace( 'status/', '' );\n}\n\nwindow.ftfHelpers.processTweets = function(){\n    const tweets = document.querySelectorAll( 'blockquote.twitter-tweet' );\n    let tweetIds = [];\n\n    for ( const tweet of tweets ) {\n        const anchors = tweet.querySelectorAll( 'a' );\n        const url = anchors[anchors.length - 1].href;\n        const tweetId = ftfHelpers.getTweetId( url );\n        tweetIds.push( tweetId );\n        tweet.dataset.tweetId = tweetId;\n    }\n\n    // console.log( 'tweet IDs', tweetIds );\n\n    if ( tweetIds.length ){\n        if ( ftf_aet.config.use_api ){\n            ftfHelpers.fetchData( {\n                    action: 'ftf_embed_tweet',\n                    tweet_ids: tweetIds.join( ',' )\n                }, function( response ){\n               if ( response && response.length ){\n                    response.forEach( function( data ){\n                        ftfHelpers.renderTweet( data );\n                    } );\n\n                    const tweetsWithAttachment = document.querySelectorAll( '[data-url-attachment-processed=\"false\"]' );\n                    let tweetsWithAttachmentCount = tweetsWithAttachment.length;\n\n                    if ( tweetsWithAttachmentCount === 0 ){\n                        ftfHelpers.dispatchEvent( 'tembeds_tweets_processed' );\n                    }\n\n                    // console.log( 'tweetsWithAttachment', tweetsWithAttachment );\n\n                    for ( const tweet of tweetsWithAttachment ) {\n                        tweet.dataset.urlAttachmentProcessed = 'true';\n\n                        if ( tweet.dataset.urlAttachment.indexOf( 'twitter.com/' ) > -1 ){\n                            console.log( 'rendering QT...', ftfHelpers.getTweetId( tweet.dataset.urlAttachment ) );\n                            ftfHelpers.fetchData( {\n                                    action: 'ftf_embed_tweet',\n                                    tweet_ids: [ftfHelpers.getTweetId( tweet.dataset.urlAttachment )]\n                                }, function( response ){\n                                    console.log( response );\n                               if ( response && response.length ){\n                                    response.forEach( function( data ){\n                                        ftfHelpers.renderTweet( data, tweet );\n                                    } );\n                                }\n                            } );\n                        } else {\n\n                        }\n\n                        ftfHelpers.fetchData( {\n                                action: 'ftf_get_site_info',\n                                url: tweet.dataset.urlAttachment\n                            }, function( data ){\n                            if ( data && data.image ){\n                                let urlAttachmentPreview = document.createElement( 'div' );\n                                urlAttachmentPreview.className = `tweet-attachment-preview card mt-4`;\n\n                                let tmpAnchor = document.createElement ( 'a' );\n                                tmpAnchor.href = tweet.dataset.urlAttachment;\n\n                                let urlAttachmentPreviewHTML = '';\n\n                                if ( data.image ){\n                                    urlAttachmentPreviewHTML += `<a href=\"${ tweet.dataset.urlAttachment }\"><img loading=\"lazy\" class=\"tweet-attachment-site-thumbnail card-img-top\" src=\"${ data.image }\" alt=\"Preview image for ${tweet.dataset.urlAttachment}\"></a>`;\n                                }\n\n                                urlAttachmentPreviewHTML += `<div class=\"card-body\">`;\n                                urlAttachmentPreviewHTML += `<p class=\"card-text\"><a class=\"stretched-link text-muted\" href=\"${ tweet.dataset.urlAttachment }\" target=\"_blank\">${ tmpAnchor.hostname }</a></p>`;\n\n                                if ( data.title ){\n                                    urlAttachmentPreviewHTML += `<p class=\"card-title\">${ data.title }</p>`;\n                                }\n\n                                if ( data.description ){\n                                    urlAttachmentPreviewHTML += `<p class=\"card-subtitle mb-2 text-muted\">${ data.description }</p>`;\n                                }\n\n                                urlAttachmentPreviewHTML += `</div>`;\n\n                                urlAttachmentPreview.innerHTML = urlAttachmentPreviewHTML;\n                                tweet.querySelector( '.tweet-body-wrapper' ).appendChild( urlAttachmentPreview );\n                            }\n\n                        }, function(){\n                            tweetsWithAttachmentCount--;\n                            // console.log( 'tweetsWithAttachmentCount', tweetsWithAttachmentCount );\n                            if ( tweetsWithAttachmentCount === 0 ){\n                                ftfHelpers.dispatchEvent( 'tembeds_tweets_processed' );\n                            }\n                        } );                           \n                    }\n                }\n                \n            } );\n        } else {\n\n            for ( const tweet of tweets ) {\n                // console.log( 'debug:tweet', tweet );\n                // console.log( 'debug:childNodes', tweet.childNodes );\n\n                let tweetAttribution = '', tweetDate = '';\n\n                if ( tweet.childNodes && tweet.childNodes.length ){\n                    if ( tweet.childNodes.length === 3 ){\n                        tweetDate = tweet.childNodes[2].textContent;\n                        for ( let i = 0; i < tweet.childNodes.length; i++ ){\n                            let currentNode = tweet.childNodes[i];\n                            if ( currentNode.nodeName === '#text' ) {\n                                tweetAttribution = currentNode.nodeValue;\n                                break;\n                            }\n                        }                        \n                    } else {\n                        tweetAttribution = tweet.childNodes[tweet.childNodes.length - 2].innerHTML;\n                        let tweetDateEl = document.createElement( 'div' );\n                        tweetDateEl.innerHTML = tweetAttribution;\n                        tweetDate = tweetDateEl.querySelector( 'a' ).textContent;\n                    }\n\n                    const usernames = tweetAttribution.match( /@\\w+/gi );\n                    let name = '', username = '';\n                    // console.log( 'debug:tweetDate', tweetDate );\n\n                    if ( usernames && usernames[0] ){\n                        username = usernames[0];\n                        const names = tweetAttribution.split( username );\n                        // console.log( 'debug:names', usernames );\n\n                        if ( names && names[0] ){\n                            name = names[0].replace( '— ', '' ).replace( ' (', '' );\n                        }\n                    }\n\n                    ftfHelpers.renderTweet( {\n                      'created_at': tweetDate,\n                      'text': tweet.querySelector( 'p' ).innerHTML,\n                      'id': tweet.dataset.tweetId,\n                      // 'author_id': '',\n                      'users': [\n                        {\n                          'name': name,\n                          'username': username.replace(/^@/, ''),\n                          // 'id': '',\n                          // 'profile_image_url': '',\n                          // 'verified': false\n                        }\n                      ]\n                    } );                    \n                }\n            }\n        }\n    }\n}\n\nwindow.ftfHelpers.renderTweet = function( data, container ){\n    // console.log( 'debug:', data );\n    let tweetText = data.text,\n        tweetUrl = `https://twitter.com/${ data.users[0].username }/status/${ data.id }`,\n        entities = null,\n        verifiedBadge = data.users[0].verified ? '<svg role=\"img\" aria-label=\"Verified user\" class=\"tweet-verified-user-badge\" viewBox=\"0 0 24 24\" aria-label=\"Verified account\" class=\"r-13gxpu9 r-4qtqp9 r-yyyyoo r-1xvli5t r-9cviqr r-dnmrzs r-bnwqim r-1plcrui r-lrvibr\"><g><path d=\"M22.5 12.5c0-1.58-.875-2.95-2.148-3.6.154-.435.238-.905.238-1.4 0-2.21-1.71-3.998-3.818-3.998-.47 0-.92.084-1.336.25C14.818 2.415 13.51 1.5 12 1.5s-2.816.917-3.437 2.25c-.415-.165-.866-.25-1.336-.25-2.11 0-3.818 1.79-3.818 4 0 .494.083.964.237 1.4-1.272.65-2.147 2.018-2.147 3.6 0 1.495.782 2.798 1.942 3.486-.02.17-.032.34-.032.514 0 2.21 1.708 4 3.818 4 .47 0 .92-.086 1.335-.25.62 1.334 1.926 2.25 3.437 2.25 1.512 0 2.818-.916 3.437-2.25.415.163.865.248 1.336.248 2.11 0 3.818-1.79 3.818-4 0-.174-.012-.344-.033-.513 1.158-.687 1.943-1.99 1.943-3.484zm-6.616-3.334l-4.334 6.5c-.145.217-.382.334-.625.334-.143 0-.288-.04-.416-.126l-.115-.094-2.415-2.415c-.293-.293-.293-.768 0-1.06s.768-.294 1.06 0l1.77 1.767 3.825-5.74c.23-.345.696-.436 1.04-.207.346.23.44.696.21 1.04z\"></path></g></svg>' : '',\n        renderedTweetHTML = `<div class=\"card w-100\">\n            <div class=\"tweet-body-wrapper card-body pt-4\">\n                <div class=\"card-text\">\n                    <div class=\"row no-gutters mb-1\">`;\n\n        if ( data.users[0].profile_image_url ){\n            renderedTweetHTML += `<div class=\"col-2 col-sm-1 col-md-1\">\n                <a href=\"https://twitter.com/${ data.users[0].username }\" class=\"text-decoration-none\"><img title=\"Profile image\" alt=\"Profile image of @${ data.users[0].username }\" loading=\"lazy\" class=\"rounded-circle border\" width=\"48\" height=\"48\" src=\"${ data.users[0].profile_image_url }\"></a>\n            </div>`;\n        }\n\n        renderedTweetHTML += `<div class=\"tweet-author ${ data.users[0].profile_image_url ? 'col-9 col-sm-10 col-md-10 pl-2' : 'col-11 col-sm-11 col-md-11' } pb-3\">\n            <p class=\"font-weight-bold mb-0 mt-0\"><a class=\"text-dark text-decoration-none\" href=\"https://twitter.com/${ data.users[0].username }\">${ data.users[0].name }${ verifiedBadge }</a></p>\n            <p class=\"mb-1 mb-md-2 mt-0\"><a class=\"text-muted text-decoration-none\" href=\"https://twitter.com/${ data.users[0].username }\">@${ data.users[0].username }</a></p>\n        </div>\n        <div class=\"col-1 text-right\">\n            <a href=\"${ tweetUrl }\" target=\"_blank\"><svg role=\"img\" aria-label=\"Twitter logo\" style=\"width: 24px;\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M512 97.248c-19.04 8.352-39.328 13.888-60.48 16.576 21.76-12.992 38.368-33.408 46.176-58.016-20.288 12.096-42.688 20.64-66.56 25.408C411.872 60.704 384.416 48 354.464 48c-58.112 0-104.896 47.168-104.896 104.992 0 8.32.704 16.32 2.432 23.936-87.264-4.256-164.48-46.08-216.352-109.792-9.056 15.712-14.368 33.696-14.368 53.056 0 36.352 18.72 68.576 46.624 87.232-16.864-.32-33.408-5.216-47.424-12.928v1.152c0 51.008 36.384 93.376 84.096 103.136-8.544 2.336-17.856 3.456-27.52 3.456-6.72 0-13.504-.384-19.872-1.792 13.6 41.568 52.192 72.128 98.08 73.12-35.712 27.936-81.056 44.768-130.144 44.768-8.608 0-16.864-.384-25.12-1.44C46.496 446.88 101.6 464 161.024 464c193.152 0 298.752-160 298.752-298.688 0-4.64-.16-9.12-.384-13.568 20.832-14.784 38.336-33.248 52.608-54.496z\" fill=\"#03a9f4\"/></svg></a>\n        </div>\n    </div>\n    <div class=\"tweet-body\">`;\n\n    if ( data.entities ){\n        if ( data.entities.urls ){\n            data.entities.urls.forEach( function( url ){\n                if ( url.display_url.indexOf( 'pic.twitter.com' ) === -1 ){\n                    tweetText = tweetText.replace( RegExp( url.url, 'ig' ), `<a href=\"${ url.expanded_url }\" target=\"_blank\">${ url.display_url }</a>` )\n                } else {\n                    tweetText = tweetText.replace( url.url, '' );\n                }\n            } );\n        }\n\n        if ( data.entities.mentions ){\n            data.entities.mentions.forEach( function( mention ){\n                tweetText = tweetText.replace( RegExp( `@${ mention.username }`, 'ig' ), `<a href=\"https://twitter.com/${ mention.username }\" target=\"_blank\">@${ mention.username }</a>` );\n            } );\n        }\n\n        if ( data.entities.hashtags ){\n            data.entities.hashtags.forEach( function( hashtag ){\n                tweetText = tweetText.replace( RegExp( `#${ hashtag.tag }`, 'ig' ), `<a href=\"https://twitter.com/hashtag/${ hashtag.tag }\" target=\"_blank\">#${ hashtag.tag }</a>` );\n            } );\n        }\n    }\n\n    if ( data.media && data.media.length ){\n        tweetText += `<div data-media-length=\"${ data.media.length }\" class=\"tweet-media row mt-3 no-gutters\">`;\n\n        data.media.forEach( function( media, index ){\n            if ( data.media.length === 1 ){\n                tweetText += `<div data-media-type=\"${ media.type }\" class=\"text-center col-sm-12 col-md-12 col-lg-12\">`;\n            } else if ( data.media.length === 3 ){\n                if ( index === 2 ){\n                    tweetText += `<div data-media-type=\"${ media.type }\" class=\"text-center col-sm-12 col-md-12 col-lg-12\">`;\n                } else {\n                    tweetText += `<div data-media-type=\"${ media.type }\" class=\"text-center col-sm-12 col-md-6 col-lg-6\">`;\n                }\n            } else if ( data.media.length > 1 && data.media.length < 5 ){\n                tweetText += `<div data-media-type=\"${ media.type }\" class=\"text-center col-sm-12 col-md-6 col-lg-6\">`;\n            } else {\n                tweetText += `<div data-media-type=\"${ media.type }\" class=\"text-center col-sm-12 col-md-3 col-lg-3\">`;\n            }\n\n            if ( media.type === 'animated_gif' ){\n                tweetText += `<video class=\"w-100 mt-0\" controls loop><source src=\"${ media.preview_image_url.replace( 'pbs.twimg.com/tweet_video_thumb', 'video.twimg.com/tweet_video' ).replace( '.jpg', '.mp4').replace( '.png', '.mp4') }\" type=\"video/mp4\"></video>`\n            } else if ( media.type === 'video' ){\n                if ( media.variants ){\n                    tweetText += `<video class=\"w-100 mt-0\" controls loop><source src=\"${ media.variants[media.variants.length-1].url }\" type=\"${ media.variants[media.variants.length-1].content_type }\"></video>`\n                } else {\n                    tweetText += `<a class=\"tweet-video-placeholder\" href=\"${ tweetUrl }\" target=\"_blank\"><img alt=\"Video preview image\" loading=\"lazy\" width=\"${ media.width }\" height=\"${ media.height }\" class=\"w-100 rounded border\" src=\"${ media.preview_image_url }\"></a>`;\n                }\n            } else if ( media.type === 'photo' ){\n                tweetText += `<a href=\"${ tweetUrl }\" target=\"_blank\"><img alt=\"${ media.alt_text }\" loading=\"lazy\" width=\"${ media.width }\" height=\"${ media.height }\" class=\"w-100 rounded border\" src=\"${ media.url }\"></a>`;\n            }\n\n            tweetText += '</div>';\n        } );\n\n        tweetText += '</div>';\n    }\n\n\n    if ( data.polls && data.polls.length ){\n        tweetText += '<div class=\"mt-0 row\">';\n\n        data.polls.forEach( function( poll ){\n            if ( poll.options && poll.options.length ){\n\n                const voteCounts = poll.options.map( function( option ){\n                    return option.votes;\n                } );\n\n                const voteCountMax = Math.max( ...voteCounts );\n                const votesTotal = voteCounts.reduce( function( total, num ){\n                    return total + num;\n                } );\n\n                poll.options.forEach( function( option ){\n                    const votesPortion = option.votes/votesTotal * 100;\n                    tweetText += `\n                    <div class=\"tweet-poll-results col-9\" style=\"height:60px;\">\n                        <div class=\"progress position-relative mt-n4 ${ option.votes === voteCountMax ? ' border border-primary ' : '' }\" style=\"height:30px;\">\n                            <div class=\"progress-bar\" \n                                 role=\"progressbar\" \n                                 style=\"width: ${ votesPortion }%\" \n                                 aria-valuenow=\"${ votesPortion }\" \n                                 aria-valuemin=\"0\" \n                                 aria-valuemax=\"100\"></div>\n                            <span class=\"pl-2 d-flex position-absolute w-100\" style=\"font-size: 1rem; line-height: 30px;\">${ option.label }</span>\n                        </div>\n                    </div>\n                    <div class=\"col-3 mt-n4 text-right\" style=\"height:60px;\">\n                        <span class=\"w-100\">${ Math.round( option.votes/votesTotal * 100 ) }%</span>\n                    </div>`;\n                } );\n                tweetText += `<div class=\"col-12 mt-3\"><p class=\"text-muted\">${ votesTotal.toLocaleString() } votes</p></div>`;\n            }\n        } );\n\n        tweetText += '</div>';\n    }                    \n\n    const tweetDate = new Date( data.created_at ).toLocaleDateString( navigator.language, { month: 'long', year: 'numeric', day: 'numeric' } );\n\n    renderedTweetHTML += tweetText + `</div>\n            </div>\n        </div>\n        <div class=\"card-footer\">`;\n\n    if ( !container ){\n        if ( ftf_aet.config.show_metrics && data.public_metrics ){\n            renderedTweetHTML += `\n                <span class=\"tweet-icon\" role=\"img\" aria-label=\"Retweets\">🔁</span><a class=\"text-muted\" href=\"${ tweetUrl }\" target=\"_blank\">${ data.public_metrics.retweet_count.toLocaleString() }</a> |\n                <span class=\"tweet-icon\" role=\"img\" aria-label=\"Likes\">❤️</span> <a class=\"text-muted\" href=\"${ tweetUrl }\" target=\"_blank\">${ data.public_metrics.like_count.toLocaleString() }</a> | `;\n        }\n                    \n        renderedTweetHTML += `<a class=\"text-muted\" href=\"${ tweetUrl }\" target=\"_blank\">${ tweetDate }</a>`;\n    }\n\n    renderedTweetHTML += '</div></div>';\n    \n    let renderedTweet = document.createElement( 'div' );\n    renderedTweet.className = `twitter-tweet twitter-tweet-rendered w-100`;\n    renderedTweet.innerHTML = renderedTweetHTML;\n\n    let lastUrl = '';\n\n    if ( data.entities && data.entities.urls && data.entities.urls.length ){\n        lastUrl = data.entities.urls[data.entities.urls.length - 1];\n    }\n\n    if ( ( data.media && data.media.length ) || data.extended_entities && data.extended_entities.media && data.extended_entities.media.length ){\n        lastUrl = '';\n    }\n\n    if ( lastUrl ){\n        renderedTweet.dataset.urlAttachment = lastUrl.expanded_url;\n        renderedTweet.dataset.urlAttachmentProcessed = 'false';\n    }\n\n    if ( container ){\n        const tweetContainer = container.querySelector( '.tweet-body a:last-of-type' );\n        console.log( tweetContainer );\n        tweetContainer.parentNode.replaceChild( renderedTweet, tweetContainer );\n\n\n    } else {\n        const tweet = document.querySelector( `[data-tweet-id=\"${ data.id }\"]` );\n        tweet.parentNode.replaceChild( renderedTweet, tweet );\n    }\n\n    // if ( data.id === '1214098949918875648' ){\n        // console.log( renderedTweet, data );\n    // }\n}\n\nwindow.ftfHelpers.ready( function(){\n    window.ftfHelpers.processTweets();\n} );\n"]}