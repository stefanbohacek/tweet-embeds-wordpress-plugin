{"version":3,"file":"processTweets.js","names":["fetchData","getTweetId","renderTweet","dispatchEvent","processTweets","tweets","document","querySelectorAll","tweetIds","tweet","anchors","url","length","href","tweetId","push","dataset","ftf_aet","config","use_api","action","tweet_ids","join","response","forEach","data","tweetsWithAttachment","tweetsWithAttachmentCount","urlAttachmentProcessed","urlAttachment","indexOf","console","log","image","urlAttachmentPreview","createElement","className","tmpAnchor","urlAttachmentPreviewHTML","hostname","title","description","innerHTML","querySelector","appendChild","tweetAttribution","tweetDate","childNodes","textContent","currentNode","i","nodeName","nodeValue","tweetDateEl","usernames","match","name","username","names","split","replace"],"sources":["processTweets.js"],"sourcesContent":["import { fetchData } from \"./fetchData.js\";\nimport { getTweetId } from \"./getTweetId.js\";\nimport { renderTweet } from \"./renderTweet.js\";\nimport { dispatchEvent } from \"./dispatchEvent.js\";\n\nconst processTweets = (fn) => {\n  const tweets = document.querySelectorAll('blockquote.twitter-tweet');\n  let tweetIds = [];\n  \n  for (const tweet of tweets) {\n    const anchors = tweet.querySelectorAll('a');\n    const url = anchors[anchors.length - 1].href;\n    const tweetId = getTweetId(url);\n    tweetIds.push(tweetId);\n    tweet.dataset.tweetId = tweetId;\n  }\n  \n  // console.log('tweet IDs', tweetIds);\n  \n  if (tweetIds.length){\n    if (ftf_aet.config.use_api){\n      fetchData({\n        action: 'ftf_embed_tweet',\n        tweet_ids: tweetIds.join(',')\n      }, function(response){\n        if (response && response.length){\n          response.forEach(function(data){\n            renderTweet(data);\n          });\n          \n          const tweetsWithAttachment = document.querySelectorAll('[data-url-attachment-processed=\"false\"]');\n          let tweetsWithAttachmentCount = tweetsWithAttachment.length;\n          \n          if (tweetsWithAttachmentCount === 0){\n            dispatchEvent('tembeds_tweets_processed');\n          }\n          \n          // console.log('tweetsWithAttachment', tweetsWithAttachment);\n          \n          for (const tweet of tweetsWithAttachment) {\n            tweet.dataset.urlAttachmentProcessed = 'true';\n            \n            if (tweet.dataset.urlAttachment.indexOf('twitter.com/') > -1){\n              console.log('rendering QT...', getTweetId(tweet.dataset.urlAttachment));\n              fetchData({\n                action: 'ftf_embed_tweet',\n                tweet_ids: [getTweetId(tweet.dataset.urlAttachment)]\n              }, function(response){\n                console.log(response);\n                if (response && response.length){\n                  response.forEach(function(data){\n                    renderTweet(data, tweet);\n                  });\n                }\n              });\n            } else {\n              // noop\n            }\n            \n            fetchData({\n              action: 'ftf_get_site_info',\n              url: tweet.dataset.urlAttachment\n            }, function(data){\n              if (data && data.image){\n                let urlAttachmentPreview = document.createElement('div');\n                urlAttachmentPreview.className = `tweet-attachment-preview card mt-4`;\n                \n                let tmpAnchor = document.createElement ('a');\n                tmpAnchor.href = tweet.dataset.urlAttachment;\n                \n                let urlAttachmentPreviewHTML = '';\n                \n                if (data.image){\n                  urlAttachmentPreviewHTML += `<a href=\"${ tweet.dataset.urlAttachment }\"><img loading=\"lazy\" class=\"tweet-attachment-site-thumbnail card-img-top\" src=\"/wp-json/ftf/proxy-media?url=${ data.image }\" alt=\"Preview image for ${tweet.dataset.urlAttachment}\"></a>`;\n                }\n                \n                urlAttachmentPreviewHTML += `<div class=\"card-body\">`;\n                urlAttachmentPreviewHTML += `<p class=\"card-text\"><a class=\"stretched-link text-muted\" href=\"${ tweet.dataset.urlAttachment }\" target=\"_blank\">${ tmpAnchor.hostname }</a></p>`;\n                \n                if (data.title){\n                  urlAttachmentPreviewHTML += `<p class=\"card-title\">${ data.title }</p>`;\n                }\n                \n                if (data.description){\n                  urlAttachmentPreviewHTML += `<p class=\"card-subtitle mb-2 text-muted\">${ data.description }</p>`;\n                }\n                \n                urlAttachmentPreviewHTML += `</div>`;\n                \n                urlAttachmentPreview.innerHTML = urlAttachmentPreviewHTML;\n                tweet.querySelector('.tweet-body-wrapper').appendChild(urlAttachmentPreview);\n              }\n              \n            }, function(){\n              tweetsWithAttachmentCount--;\n              // console.log('tweetsWithAttachmentCount', tweetsWithAttachmentCount);\n              if (tweetsWithAttachmentCount === 0){\n                dispatchEvent('tembeds_tweets_processed');\n              }\n            });                           \n          }\n        }\n        \n      });\n    } else {\n      \n      for (const tweet of tweets) {\n        // console.log('debug:tweet', tweet);\n        // console.log('debug:childNodes', tweet.childNodes);\n        \n        let tweetAttribution = '', tweetDate = '';\n        \n        if (tweet.childNodes && tweet.childNodes.length){\n          if (tweet.childNodes.length === 3){\n            tweetDate = tweet.childNodes[2].textContent;\n            for (let i = 0; i < tweet.childNodes.length; i++){\n              let currentNode = tweet.childNodes[i];\n              if (currentNode.nodeName === '#text') {\n                tweetAttribution = currentNode.nodeValue;\n                break;\n              }\n            }                        \n          } else {\n            tweetAttribution = tweet.childNodes[tweet.childNodes.length - 2].innerHTML;\n            let tweetDateEl = document.createElement('div');\n            tweetDateEl.innerHTML = tweetAttribution;\n            tweetDate = tweetDateEl.querySelector('a').textContent;\n          }\n          \n          const usernames = tweetAttribution.match(/@\\w+/gi);\n          let name = '', username = '';\n          // console.log('debug:tweetDate', tweetDate);\n          \n          if (usernames && usernames[0]){\n            username = usernames[0];\n            const names = tweetAttribution.split(username);\n            // console.log('debug:names', usernames);\n            \n            if (names && names[0]){\n              name = names[0].replace('â€” ', '').replace(' (', '');\n            }\n          }\n          \n          renderTweet({\n            'created_at': tweetDate,\n            'text': tweet.querySelector('p').innerHTML,\n            'id': tweet.dataset.tweetId,\n            // 'author_id': '',\n            'users': [\n              {\n                'name': name,\n                'username': username.replace(/^@/, ''),\n                // 'id': '',\n                // 'profile_image_url': '',\n                // 'verified': false\n              }\n            ]\n          });                    \n        }\n      }\n    }\n  }\n};\n\nexport { processTweets };\n"],"mappings":"gzCAAA,OAASA,SAAS,KAAQ,gBAAgB,CAC1C,OAASC,UAAU,KAAQ,iBAAiB,CAC5C,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,aAAa,KAAQ,oBAAoB,CAElD,GAAMC,cAAa,CAAG,UAAQ,WACtBC,MAAM,CAAGC,QAAQ,CAACC,gBAAgB,CAAC,0BAA0B,CAAC,CAChEC,QAAQ,CAAG,EAAE,sCAEGH,MAAM,MAA1B,+CAA4B,IAAjBI,OAAK,aACRC,OAAO,CAAGD,MAAK,CAACF,gBAAgB,CAAC,GAAG,CAAC,CACrCI,GAAG,CAAGD,OAAO,CAACA,OAAO,CAACE,MAAM,CAAG,CAAC,CAAC,CAACC,IAAI,CACtCC,OAAO,CAAGb,UAAU,CAACU,GAAG,CAAC,CAC/BH,QAAQ,CAACO,IAAI,CAACD,OAAO,CAAC,CACtBL,MAAK,CAACO,OAAO,CAACF,OAAO,CAAGA,OAC1B,CAEA;AAAA,mDAEA,GAAIN,QAAQ,CAACI,MAAM,CACjB,GAAIK,OAAO,CAACC,MAAM,CAACC,OAAO,CACxBnB,SAAS,CAAC,CACRoB,MAAM,CAAE,iBAAiB,CACzBC,SAAS,CAAEb,QAAQ,CAACc,IAAI,CAAC,GAAG,CAC9B,CAAC,CAAE,SAASC,QAAQ,CAAC,CACfA,QAAQ,EAAIA,QAAQ,CAACX,MAAM,aAC7BW,QAAQ,CAACC,OAAO,CAAC,SAASC,IAAI,CAAC,CAC7BvB,WAAW,CAACuB,IAAI,CAClB,CAAC,CAAC,IAEIC,qBAAoB,CAAGpB,QAAQ,CAACC,gBAAgB,CAAC,2CAAyC,CAAC,CAC7FoB,yBAAyB,CAAGD,oBAAoB,CAACd,MAAM,CAEzB,CAAC,GAA/Be,yBAA+B,EACjCxB,aAAa,CAAC,0BAA0B,CAAC,CAG3C;AAAA,iDAEoBuB,oBAAoB,oCAA7BjB,MAAK,cACdA,KAAK,CAACO,OAAO,CAACY,sBAAsB,CAAG,MAAM,CAEa,CAAC,CAAC,CAAxDnB,KAAK,CAACO,OAAO,CAACa,aAAa,CAACC,OAAO,CAAC,cAAc,CAAM,GAC1DC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAE/B,UAAU,CAACQ,KAAK,CAACO,OAAO,CAACa,aAAa,CAAC,CAAC,CACvE7B,SAAS,CAAC,CACRoB,MAAM,CAAE,iBAAiB,CACzBC,SAAS,CAAE,CAACpB,UAAU,CAACQ,KAAK,CAACO,OAAO,CAACa,aAAa,CAAC,CACrD,CAAC,CAAE,SAASN,QAAQ,CAAC,CACnBQ,OAAO,CAACC,GAAG,CAACT,QAAQ,CAAC,CACjBA,QAAQ,EAAIA,QAAQ,CAACX,MAAM,EAC7BW,QAAQ,CAACC,OAAO,CAAC,SAASC,IAAI,CAAC,CAC7BvB,WAAW,CAACuB,IAAI,CAAEhB,KAAK,CACzB,CAAC,CAEL,CAAC,CAAC,EAKJT,SAAS,CAAC,CACRoB,MAAM,CAAE,mBAAmB,CAC3BT,GAAG,CAAEF,KAAK,CAACO,OAAO,CAACa,aACrB,CAAC,CAAE,SAASJ,IAAI,CAAC,CACf,GAAIA,IAAI,EAAIA,IAAI,CAACQ,KAAK,CAAC,CACrB,GAAIC,qBAAoB,CAAG5B,QAAQ,CAAC6B,aAAa,CAAC,KAAK,CAAC,CACxDD,oBAAoB,CAACE,SAAS,qCAAuC,CAErE,GAAIC,UAAS,CAAG/B,QAAQ,CAAC6B,aAAa,CAAE,GAAG,CAAC,CAC5CE,SAAS,CAACxB,IAAI,CAAGJ,KAAK,CAACO,OAAO,CAACa,aAAa,CAE5C,GAAIS,yBAAwB,CAAG,EAAE,CAE7Bb,IAAI,CAACQ,KAAK,GACZK,wBAAwB,sBAAiB7B,KAAK,CAACO,OAAO,CAACa,aAAa,+HAAkHJ,IAAI,CAACQ,KAAK,uCAA6BxB,KAAK,CAACO,OAAO,CAACa,aAAa,WAAQ,EAGlQS,wBAAwB,6BAA6B,CACrDA,wBAAwB,iFAAwE7B,KAAK,CAACO,OAAO,CAACa,aAAa,iCAAuBQ,SAAS,CAACE,QAAQ,YAAW,CAE3Kd,IAAI,CAACe,KAAK,GACZF,wBAAwB,oCAA8Bb,IAAI,CAACe,KAAK,QAAO,EAGrEf,IAAI,CAACgB,WAAW,GAClBH,wBAAwB,uDAAiDb,IAAI,CAACgB,WAAW,QAAO,EAGlGH,wBAAwB,UAAY,CAEpCJ,oBAAoB,CAACQ,SAAS,CAAGJ,wBAAwB,CACzD7B,KAAK,CAACkC,aAAa,CAAC,qBAAqB,CAAC,CAACC,WAAW,CAACV,oBAAoB,CAC7E,CAEF,CAAC,CAAE,UAAU,CACXP,yBAAyB,EAAE,CAEO,CAAC,GAA/BA,yBAA+B,EACjCxB,aAAa,CAAC,0BAA0B,CAE5C,CAAC,CAAC,EA5DJ,yDA6DC,wDAGL,CAAC,CAAC,KACG,kDAEeE,MAAM,MAA1B,kDAA4B,IAAjBI,MAAK,cAIVoC,gBAAgB,CAAG,EAAE,CAAEC,SAAS,CAAG,EAAE,CAEzC,GAAIrC,KAAK,CAACsC,UAAU,EAAItC,KAAK,CAACsC,UAAU,CAACnC,MAAM,CAAC,CAC9C,GAAgC,CAAC,GAA7BH,KAAK,CAACsC,UAAU,CAACnC,MAAY,CAAC,CAChCkC,SAAS,CAAGrC,KAAK,CAACsC,UAAU,CAAC,CAAC,CAAC,CAACC,WAAW,CAC3C,IAAK,GACCC,YAAW,CADRC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGzC,KAAK,CAACsC,UAAU,CAACnC,MAAM,CAAEsC,CAAC,EAAE,CAE9C,GADID,WAAW,CAAGxC,KAAK,CAACsC,UAAU,CAACG,CAAC,CAAC,CACR,OAAO,GAAhCD,WAAW,CAACE,QAAoB,CAAE,CACpCN,gBAAgB,CAAGI,WAAW,CAACG,SAAS,CACxC,KACF,CAEJ,CAAC,IAAM,CACLP,gBAAgB,CAAGpC,KAAK,CAACsC,UAAU,CAACtC,KAAK,CAACsC,UAAU,CAACnC,MAAM,CAAG,CAAC,CAAC,CAAC8B,SAAS,CAC1E,GAAIW,YAAW,CAAG/C,QAAQ,CAAC6B,aAAa,CAAC,KAAK,CAAC,CAC/CkB,WAAW,CAACX,SAAS,CAAGG,gBAAgB,CACxCC,SAAS,CAAGO,WAAW,CAACV,aAAa,CAAC,GAAG,CAAC,CAACK,WAC7C,CAAC,GAEKM,UAAS,CAAGT,gBAAgB,CAACU,KAAK,CAAC,QAAQ,CAAC,CAC9CC,IAAI,CAAG,EAAE,CAAEC,QAAQ,CAAG,EAAE,CAC5B;AAEA,GAAIH,SAAS,EAAIA,SAAS,CAAC,CAAC,CAAC,CAAC,CAC5BG,QAAQ,CAAGH,SAAS,CAAC,CAAC,CAAC,CACvB,GAAMI,MAAK,CAAGb,gBAAgB,CAACc,KAAK,CAACF,QAAQ,CAAC,CAC9C;AAEIC,KAAK,EAAIA,KAAK,CAAC,CAAC,CAAC,GACnBF,IAAI,CAAGE,KAAK,CAAC,CAAC,CAAC,CAACE,OAAO,CAAC,SAAI,CAAE,EAAE,CAAC,CAACA,OAAO,CAAC,IAAI,CAAE,EAAE,CAAC,CAEvD,CAEA1D,WAAW,CAAC,CACV,WAAc4C,SAAS,CACvB,KAAQrC,KAAK,CAACkC,aAAa,CAAC,GAAG,CAAC,CAACD,SAAS,CAC1C,GAAMjC,KAAK,CAACO,OAAO,CAACF,OAAO,CAC3B;AACA,MAAS,CACP,CACE,KAAQ0C,IAAI,CACZ,SAAYC,QAAQ,CAACG,OAAO,CAAC,IAAI,CAAE,EAAE,CACrC;AACA;AACA;AACF,CAAC,CAEL,CAAC,CACH,CACF,CAAC,qDACH,CAEJ,CAAC,CAED,OAASxD,aAAa"}